{"version":3,"file":"static/js/811.1dfaf025.chunk.js","mappings":"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","sources":["webpack://home-cms-front/./src/pagesComponents/ProfilePage/ProfilePage.module.scss?93c5","pagesComponents/ProfilePage/ProfilePage.tsx","webpack://home-cms-front/./src/pagesComponents/ProfileEditorPage/ProfileEditorPage.module.scss?d9f8","pagesComponents/ProfileEditorPage/ProfileEditorPage.tsx","pages/Profile/Profile.tsx","pages/ProfileEditor/ProfileEditor.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"styled\":\"ProfilePage_styled__FiNHz\",\"half\":\"ProfilePage_half__Zlf9Y\",\"group\":\"ProfilePage_group__FDnE6\",\"footer\":\"ProfilePage_footer__RGPsz\"};","import {\n  Action,\n  Checkbox,\n  H3,\n  Input,\n  Skeleton,\n  ESkeletonMode,\n  Text,\n  TextArea,\n} from 'components/kit';\nimport { useAuth, useDistricts, useErrors, useOrganizationTypes } from 'hooks';\nimport { useEffect, useMemo } from 'react';\nimport { getValueByIdFromSelect } from 'utils';\nimport styles from './ProfilePage.module.scss';\n\nexport const ProfilePage = () => {\n  const { profile, handleLogout } = useAuth();\n  const { addError } = useErrors();\n\n  const {\n    apiData: districts,\n    apiErrors: districtsErrors,\n    isLoading: districtsLoading,\n    isError: districtsError,\n  } = useDistricts();\n  const {\n    apiData: organizationTypes,\n    apiErrors: organizationTypesErrors,\n    isLoading: organizationTypesLoading,\n    isError: organizationTypesError,\n  } = useOrganizationTypes();\n\n  const { company } = useMemo(() => profile ?? { company: null }, [profile]);\n\n  const memoizedDistrictsError = useMemo(() => districtsError, [districtsError]);\n  const memoizedOrganizationTypesError = useMemo(\n    () => organizationTypesError,\n    [organizationTypesError]\n  );\n\n  useEffect(() => {\n    if (memoizedDistrictsError) {\n      districtsErrors?.forEach((error) => addError(error));\n    }\n    if (memoizedOrganizationTypesError) {\n      organizationTypesErrors?.forEach((error) => addError(error));\n    }\n  }, [memoizedDistrictsError, memoizedOrganizationTypesError]);\n\n  return (\n    <div className={styles.styled}>\n      <div className={styles.half}>\n        <Input value={company?.name} heading=\"Краткое наименование организации\" readOnly />\n        <TextArea value={company?.fullName} heading=\"Полное наименование организации\" readOnly />\n        {organizationTypesLoading ? (\n          <Skeleton mode={ESkeletonMode.INPUT} withLoader heading=\"Тип организации\" />\n        ) : organizationTypesError ? (\n          <Input value={''} heading=\"Тип организации\" readOnly />\n        ) : (\n          <Input\n            value={getValueByIdFromSelect(organizationTypes!, company?.type)}\n            heading=\"Тип организации\"\n            readOnly\n          />\n        )}\n        {districtsLoading ? (\n          <Skeleton mode={ESkeletonMode.INPUT} withLoader heading=\"Район\" />\n        ) : districtsError ? (\n          <Input value={''} heading=\"Район\" readOnly />\n        ) : (\n          <Input\n            value={getValueByIdFromSelect(districts!, company?.district)}\n            heading=\"Район\"\n            readOnly\n          />\n        )}\n      </div>\n      <div className={styles.half}>\n        <Input value={company?.supervisor} heading=\"Руководитель организации\" readOnly />\n        <Input\n          value={company?.responsible}\n          heading=\"Ответственный за предоставление информации\"\n          readOnly\n        />\n        <div className={styles.group}>\n          <H3>Об организации</H3>\n          <Checkbox\n            checked={company?.educationLicense}\n            readOnly\n            label={<Text>Наличие лицензии на осуществление образовательной деятельности</Text>}\n          />\n          <Checkbox\n            checked={company?.medicineLicense}\n            readOnly\n            label={<Text>Наличие лицензии на осуществление медицинской деятельности</Text>}\n          />\n          <Checkbox\n            checked={company?.innovationGround}\n            readOnly\n            label={<Text>Наличие инновационной площадки в организации</Text>}\n          />\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <Action isDeleteMode text=\"Выйти из аккаунта\" onClick={handleLogout} />\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"styled\":\"ProfileEditorPage_styled__0FZcI\",\"half\":\"ProfileEditorPage_half__39XHi\",\"group\":\"ProfileEditorPage_group__dwgMz\",\"footer\":\"ProfileEditorPage_footer__y7a1A\",\"footer__button\":\"ProfileEditorPage_footer__button__alYpF\"};","import { API } from 'api';\nimport {\n  Action,\n  Checkbox,\n  H3,\n  Input,\n  Skeleton,\n  ESkeletonMode,\n  Text,\n  TextArea,\n  Select,\n  Button,\n  Modal,\n} from 'components/kit';\nimport { useAuth, useDistricts, useErrors, useOrganizationTypes } from 'hooks';\nimport { ChangeEvent, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { EProposalStatus } from 'types/enums';\nimport { IProfileState, IInputsState } from 'types/interfaces';\nimport { registerInput, textInputValidator, validateAll } from 'utils';\nimport styles from './ProfileEditorPage.module.scss';\n\nexport const ProfileEditorPage = () => {\n  const { profile, updateProfile } = useAuth();\n  const { addError } = useErrors();\n  const navigate = useNavigate();\n\n  const { company } = useMemo(() => profile ?? { company: null }, [profile]);\n\n  const {\n    apiData: districts,\n    apiErrors: districtsErrors,\n    isLoading: districtsLoading,\n    isError: districtsError,\n  } = useDistricts();\n  const {\n    apiData: organizationTypes,\n    apiErrors: organizationTypesErrors,\n    isLoading: organizationTypesLoading,\n    isError: organizationTypesError,\n  } = useOrganizationTypes();\n\n  const memoizedDistrictsError = useMemo(() => districtsError, [districtsError]);\n  const memoizedOrganizationTypesError = useMemo(\n    () => organizationTypesError,\n    [organizationTypesError]\n  );\n\n  useEffect(() => {\n    if (memoizedDistrictsError) {\n      districtsErrors?.forEach((error) => addError(error));\n    }\n    if (memoizedOrganizationTypesError) {\n      organizationTypesErrors?.forEach((error) => addError(error));\n    }\n  }, [memoizedDistrictsError, memoizedOrganizationTypesError]);\n\n  const [fetchInProgress, setFetchInProgress] = useState(false);\n\n  const [modalState, setModalState] = useState(false);\n\n  const toggleModal = () => {\n    setModalState(!modalState);\n  };\n\n  const [state, setState] = useState<IProfileState>({\n    name: registerInput(company?.name ?? '', textInputValidator),\n    fullName: registerInput(company?.fullName ?? '', textInputValidator),\n    type: company?.type!,\n    district: company?.district!,\n    supervisor: registerInput(company?.supervisor ?? '', textInputValidator),\n    responsible: registerInput(company?.responsible ?? '', textInputValidator),\n    educationLicense: company?.educationLicense ?? false,\n    medicineLicense: company?.medicineLicense ?? false,\n    innovationGround: company?.innovationGround ?? false,\n  });\n\n  const handleProfileUpdate = async () => {\n    toggleModal();\n\n    const needValidation = {\n      name: state.name,\n      fullName: state.fullName,\n      supervisor: state.supervisor,\n      responsible: state.responsible,\n    };\n\n    const validationSuccess = validateAll(\n      Object.values(needValidation).map((val) => ({\n        value: val.value,\n        validator: val.validator,\n      }))\n    );\n\n    if (!validationSuccess) {\n      addError('Проверьте поля на правильность');\n      return;\n    }\n\n    setFetchInProgress(true);\n\n    try {\n      const { errors, data } = await API.profile.update(state);\n\n      if (errors) {\n        errors.forEach((error) => addError(error));\n\n        setFetchInProgress(false);\n\n        return;\n      }\n\n      if (data) {\n        updateProfile({\n          name: state.name.value,\n          fullName: state.fullName.value,\n          type: state?.type!,\n          district: state?.district!,\n          supervisor: state.supervisor.value,\n          responsible: state.responsible.value,\n          educationLicense: state?.educationLicense!,\n          medicineLicense: state?.medicineLicense!,\n          innovationGround: state?.innovationGround!,\n          status: EProposalStatus.CONFIRMATION,\n          cause: null,\n        });\n\n        navigate('/profile');\n      } else {\n        setFetchInProgress(false);\n        addError('Не удалось обновить данные профиля!');\n      }\n    } catch (e) {\n      setFetchInProgress(false);\n      addError('Произошла критическая ошибка при обновлении данных профиля!');\n    }\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const [key, value] = [e.target.name, e.target.value];\n\n    const validationResult = (state as unknown as IInputsState)[key].validator(value);\n\n    setState({\n      ...state,\n      [key]: {\n        ...(state as unknown as IInputsState)[key],\n        value,\n        error: {\n          exist: !validationResult.success,\n          text: validationResult.text,\n        },\n      },\n    });\n  };\n\n  const bindCheckToggle = (name: string) => () => {\n    setState({\n      ...state,\n      [name]: !(state as unknown as IInputsState)[name],\n    });\n  };\n\n  const bindSelect = (name: string) => (option: number) => {\n    setState({\n      ...state,\n      [name]: option,\n    });\n  };\n\n  return (\n    <div className={styles.styled}>\n      <div className={styles.half}>\n        <Input\n          name=\"name\"\n          value={state.name.value}\n          onChange={handleChange}\n          error={state.name.error}\n          heading=\"Краткое наименование организации\"\n        />\n        <TextArea\n          name=\"fullName\"\n          value={state.fullName.value}\n          onChange={handleChange}\n          error={state.fullName.error}\n          heading=\"Полное наименование организации\"\n        />\n        {organizationTypesLoading ? (\n          <Skeleton mode={ESkeletonMode.INPUT} withLoader heading=\"Тип организации\" />\n        ) : organizationTypesError ? (\n          <Input value={''} heading=\"Тип организации\" readOnly />\n        ) : (\n          <Select\n            value={state.type}\n            options={organizationTypes!}\n            heading=\"Тип организации\"\n            onChangeOption={bindSelect('type')}\n          />\n        )}\n        {districtsLoading ? (\n          <Skeleton mode={ESkeletonMode.INPUT} withLoader heading=\"Район\" />\n        ) : districtsError ? (\n          <Input value={''} heading=\"Район\" readOnly />\n        ) : (\n          <Select\n            value={state.district}\n            options={districts!}\n            heading=\"Район\"\n            onChangeOption={bindSelect('district')}\n          />\n        )}\n      </div>\n      <div className={styles.half}>\n        <Input\n          name=\"supervisor\"\n          value={state.supervisor.value}\n          onChange={handleChange}\n          error={state.supervisor.error}\n          heading=\"Руководитель организации\"\n        />\n        <Input\n          name=\"responsible\"\n          value={state.responsible.value}\n          onChange={handleChange}\n          error={state.responsible.error}\n          heading=\"Ответственный за предоставление информации\"\n        />\n        <div className={styles.group}>\n          <H3>Об организации</H3>\n          <Checkbox\n            checked={state.educationLicense}\n            onToggle={bindCheckToggle('educationLicense')}\n            label={<Text>Наличие лицензии на осуществление образовательной деятельности</Text>}\n          />\n          <Checkbox\n            checked={state.medicineLicense}\n            onToggle={bindCheckToggle('medicineLicense')}\n            label={<Text>Наличие лицензии на осуществление медицинской деятельности</Text>}\n          />\n          <Checkbox\n            checked={state.innovationGround}\n            onToggle={bindCheckToggle('innovationGround')}\n            label={<Text>Наличие инновационной площадки в организации</Text>}\n          />\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <Button\n          onClick={toggleModal}\n          className={styles.footer__button}\n          isLoading={districtsLoading || organizationTypesLoading || fetchInProgress}\n          disabled={districtsError || organizationTypesError}\n        >\n          <Text>Отправить на рассмотрение</Text>\n        </Button>\n        <Action text=\"Отменить изменения\" onClick={() => navigate('/profile')} />\n      </div>\n      <Modal\n        isOpen={modalState}\n        text=\"Вы точно хотите отправить информацию в профиле на рассмотрение? \"\n        submitText=\"Отправить\"\n        cancelText=\"Отменить\"\n        onSubmit={handleProfileUpdate}\n        onCancel={toggleModal}\n      />\n    </div>\n  );\n};\n","import styles from 'Profile.module.scss';\r\nimport { PageHeading } from 'components';\r\nimport { Action, Breadcrumbs, Layout, Text } from 'components/kit';\r\nimport { useAuth } from 'hooks';\r\nimport { EditIcon } from 'assets/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ProfilePage } from 'pagesComponents';\r\n\r\nexport const Profile = () => {\r\n  const { profile } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Layout>\r\n      <Breadcrumbs paths={[{ link: '/profile', alias: 'Профиль' }]} />\r\n      <PageHeading\r\n        heading=\"Профиль\"\r\n        status={profile?.company?.status}\r\n        cause={\r\n          <Text isMedium>\r\n            Профиль отклонен со следующими ошибками:\r\n            <br />\r\n            {profile?.company?.cause}\r\n          </Text>\r\n        }\r\n        action={\r\n          <Action\r\n            text=\"Редактировать\"\r\n            icon={<EditIcon />}\r\n            onClick={() => navigate('/profile/edit')}\r\n          />\r\n        }\r\n      />\r\n      <ProfilePage />\r\n    </Layout>\r\n  );\r\n};\r\n","import styles from 'ProfileEditor.module.scss';\r\nimport { PageHeading } from 'components';\r\nimport { Action, Breadcrumbs, Layout, Text } from 'components/kit';\r\nimport { useAuth } from 'hooks';\r\nimport { EditIcon } from 'assets/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ProfileEditorPage } from 'pagesComponents';\r\n\r\nexport const ProfileEditor = () => {\r\n  const { profile } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Layout>\r\n      <Breadcrumbs\r\n        paths={[\r\n          { link: '/profile', alias: 'Профиль' },\r\n          { link: '/profile/edit', alias: 'Редактировать профиль' },\r\n        ]}\r\n      />\r\n      <PageHeading heading=\"Редактировать профиль\" />\r\n      <ProfileEditorPage />\r\n    </Layout>\r\n  );\r\n};\r\n"],"names":["ProfilePage","useAuth","profile","handleLogout","addError","useErrors","useDistricts","districts","apiData","districtsErrors","apiErrors","districtsLoading","isLoading","districtsError","isError","useOrganizationTypes","organizationTypes","organizationTypesErrors","organizationTypesLoading","organizationTypesError","company","useMemo","memoizedDistrictsError","memoizedOrganizationTypesError","useEffect","forEach","error","className","styles","value","name","heading","readOnly","fullName","mode","ESkeletonMode","withLoader","getValueByIdFromSelect","type","district","supervisor","responsible","H3","checked","educationLicense","label","medicineLicense","innovationGround","isDeleteMode","text","onClick","ProfileEditorPage","updateProfile","navigate","useNavigate","useState","fetchInProgress","setFetchInProgress","modalState","setModalState","toggleModal","registerInput","textInputValidator","state","setState","handleProfileUpdate","needValidation","validateAll","Object","values","map","val","validator","API","errors","data","status","EProposalStatus","cause","handleChange","e","target","key","validationResult","exist","success","bindCheckToggle","bindSelect","option","onChange","options","onChangeOption","onToggle","disabled","isOpen","submitText","cancelText","onSubmit","onCancel","Profile","paths","link","alias","isMedium","action","icon","ProfileEditor"],"sourceRoot":""}